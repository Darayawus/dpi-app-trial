@page "{id}"
@model PrintBucket.Web.Pages.BucketModel
@inject Microsoft.Extensions.Localization.IStringLocalizer<SharedResource> L
@inject Microsoft.Extensions.Configuration.IConfiguration Configuration
@{
    var s3Base = $"https://dpi-dev-bucket.s3.amazonaws.com";
    ViewData["Title"] = L["BucketViewTitle"];
}

<div class="container py-5">
    <div class="row">
        <div class="col-12">
            @if (Model.Bucket != null)
            {
                <!-- Main content (images) -->
                @if (Model.Images?.Any() == true)
                {
                    <div class="row g-4 mb-5 pb-5"> <!-- Added bottom padding to account for fixed footer -->
                        @foreach (var image in Model.Images)
                        {
                            <div class="col-12 col-md-6 col-lg-4">
                                <div class="card h-100">
                                    <img src="@(string.IsNullOrEmpty(s3Base) ? Uri.EscapeUriString(image.SmallKey ?? string.Empty) : $"{s3Base}/{Uri.EscapeDataString(image.SmallKey ?? string.Empty)}")"
                                         class="card-img-top" alt="@image.FileName" loading="lazy" />
                                    <div class="card-body">
                                        <h5 class="card-title text-truncate">@image.FileName</h5>
                                        <p class="card-text small text-muted">
                                            @image.CreatedAt.ToLocalTime().ToString("g")
                                        </p>
                                        <div class="btn-group">
                                            <a href="@(string.IsNullOrEmpty(s3Base) ? Uri.EscapeUriString(image.OriginalKey ?? string.Empty) : $"{s3Base}/{Uri.EscapeDataString(image.OriginalKey ?? string.Empty)}")"
                                               class="btn btn-sm btn-outline-primary" target="_blank">
                                                <i class="bi bi-download"></i> @L["Download"]
                                            </a>
                                            <button type="button" 
                                                    class="btn btn-sm btn-outline-secondary analyze-btn" 
                                                    data-image-url="@($"{s3Base}/{Uri.EscapeDataString(image.OriginalKey ?? string.Empty)}")"
                                                    title="@L["AnalyzeImage"]">
                                                <i class="bi bi-robot"></i>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }

                <!-- Fixed bottom bar containing all elements -->
                <div class="fixed-bottom bg-white border-top shadow-lg">
                    <div class="container">
                        <div class="row py-3 align-items-center">
                            <!-- QR on the left -->
                            <div class="col-3 text-start">
                                <div id="qr" class="d-inline-block"></div>
                            </div>
                            
                            <!-- Info in the center -->
                            <div class="col-6 text-center">
                                <h5 class="mb-1">@Model.Bucket.Name</h5>
                                <small class="text-muted">
                                    <i class="bi bi-calendar3"></i> @Model.Bucket.CreatedAt.ToLocalTime().ToString("g")
                                </small>
                            </div>
                            
                            <!-- Upload button on the right -->
                            <div class="col-3 text-end">
                                <form method="post" enctype="multipart/form-data" asp-page-handler="Upload" asp-route-id="@Model.Bucket.Id">
                                    <input type="file" id="fileInput" name="files" multiple accept=".jpg,.jpeg,image/jpeg" class="d-none" />
                                    
                                    <div class="d-inline-flex flex-column align-items-center">
                                        <label for="fileInput" class="rounded-circle shadow-lg d-inline-flex align-items-center justify-content-center"
                                               style="width:56px;height:56px;background-color:#0d6efd;border:none;cursor:pointer;">
                                            <i class="bi bi-plus-lg text-white" style="font-size:28px;line-height:1;"></i>
                                            <span class="visually-hidden">Upload</span>
                                        </label>
                                        <!-- caption under button, localized and centered -->
                                        <small class="mt-2">@L["AddPhotos"]</small>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="text-center py-5">
                    <h2>@L["BucketNotFound"]</h2>
                    <p class="text-muted">@L["BucketNotFoundDesc"]</p>
                    <a href="@Url.Page("/Index")" class="btn btn-primary">@L["BackHome"]</a>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var bucketId = "@Model.Bucket?.Id";
            if (bucketId) {
                new QRCode(document.getElementById("qr"), {
                    text: bucketId.replace("bucket-",""),
                    width: 115,  // Reduced size to better fit
                    height: 115,
                    colorDark: "#000000",
                    colorLight: "#ffffff",
                    correctLevel: QRCode.CorrectLevel.H
                });
            }

            var fileInput = document.getElementById('fileInput');
            if (fileInput) {
                fileInput.addEventListener('change', function () {
                    fileInput.form.submit();
                });
            }
        });
    </script>

    <!-- Existing scripts -->
    <script>
        // AI Analysis handling
        document.querySelectorAll('.analyze-btn').forEach(button => {
            button.addEventListener('click', async function() {
                const imageUrl = this.dataset.imageUrl;
                const button = this;
                
                // Disable button and show loading state
                button.disabled = true;
                const originalIcon = button.innerHTML;
                button.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>';

                try {
                    const response = await fetch('/api/ai/analyze', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ imageUrl: imageUrl })
                    });

                    if (!response.ok) throw new Error('Network response was not ok');
                    
                    const result = await response.json();
                    
                    // Show result in a modal or alert
                    alert(result.description);
                } catch (error) {
                    console.error('Error:', error);
                    alert('Error analyzing image');
                } finally {
                    // Restore button state
                    button.disabled = false;
                    button.innerHTML = originalIcon;
                }
            });
        });
    </script>
}